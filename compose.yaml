version:  '3.8'
services:
  mysql:
    image: mysql:8.2
    container_name: mysql-db
    restart: on-failure
    env_file:
      - .env
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - 3306:3306

  adminer:
    image: adminer
    container_name: adminer-app
    restart: on-failure
    ports:
      - '3001:8080'

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    ports:
      - '9000:9000'
    container_name: php8
    volumes:
      - './app/:/var/www/app'
    restart: on-failure
    env_file:
      - .env
    user: 1000:1000
    depends_on:
      - redis

  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx-alpine
    restart: on-failure
    volumes:
      - './app/public:/var/www/app/public'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '3000:80'
      - '444:443'
    depends_on:
      - php

    # Switch to debug mode:
    # command: [ nginx-debug, '-g', 'dlemon off;' ]

  redis:
    image: redis:7.2-alpine
    container_name: redis-cache
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - cache:/data

    # save data every 20 seconds if at least 1 key changed
    # Double dollars, so that the variable is not expanded by Docker Compose
    # Surround by quotes, so that the shell does not split the password
    command:
      - /bin/sh
      - -c
      - redis-server --save 20 1 --loglevel warning --requirepass "$${REDIS_PASSWORD}"
    env_file:
      - .env

volumes:
  dbdata:
  cache:
    driver: local